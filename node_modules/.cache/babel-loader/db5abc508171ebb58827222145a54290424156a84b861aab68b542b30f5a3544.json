{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-react/chore-quest/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ChoreInputForm from \"./components/ChoreInputForm\";\nimport ChoreList from \"./components/ChoreList\";\nimport DieRoll from \"./components/DieRoll\";\nimport MonsterHealth from \"./components/MonsterHealth\";\nimport ChoreLegend from \"./components/ChoreLegend\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chores, setChores] = useState([]);\n  const [category, setCategory] = useState(null);\n  const [monsterHealth, setMonsterHealth] = useState(100);\n  const addChore = chore => {\n    setChores([...chores, chore]);\n  };\n  const completeChore = chore => {\n    setChores(chores.filter(item => item.chore !== chore.chore));\n    setMonsterHealth(monsterHealth - chore.value);\n  };\n  const clearChores = () => {\n    setChores([]);\n  };\n  const resetMonsterHealth = () => {\n    setMonsterHealth(100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChoreQuest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChoreInputForm, {\n      addChore: addChore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DieRoll, {\n      setCategory: setCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), category && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Category \", category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChoreList, {\n        chores: chores,\n        category: category,\n        completeChore: completeChore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MonsterHealth, {\n      health: monsterHealth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChoreLegend, {\n      chores: chores\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: clearChores,\n      className: \"mr-2\",\n      children: \"Clear Chores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: resetMonsterHealth,\n      children: \"Reset Monster Health\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DwcBhHiqJlHo5rtntwhslZLBNTA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChoreInputForm","ChoreList","DieRoll","MonsterHealth","ChoreLegend","Button","jsxDEV","_jsxDEV","App","_s","chores","setChores","category","setCategory","monsterHealth","setMonsterHealth","addChore","chore","completeChore","filter","item","value","clearChores","resetMonsterHealth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","health","onClick","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-react/chore-quest/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ChoreInputForm from \"./components/ChoreInputForm\";\nimport ChoreList from \"./components/ChoreList\";\nimport DieRoll from \"./components/DieRoll\";\nimport MonsterHealth from \"./components/MonsterHealth\";\nimport ChoreLegend from \"./components/ChoreLegend\";\nimport { Button } from \"react-bootstrap\";\n\nconst App = () => {\n  const [chores, setChores] = useState([]);\n  const [category, setCategory] = useState(null);\n  const [monsterHealth, setMonsterHealth] = useState(100);\n\n  const addChore = (chore) => {\n    setChores([...chores, chore]);\n  };\n\n  const completeChore = (chore) => {\n    setChores(chores.filter((item) => item.chore !== chore.chore));\n    setMonsterHealth(monsterHealth - chore.value);\n  };\n\n  const clearChores = () => {\n    setChores([]);\n  };\n\n  const resetMonsterHealth = () => {\n    setMonsterHealth(100);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>ChoreQuest</h1>\n      <ChoreInputForm addChore={addChore} />\n      <DieRoll setCategory={setCategory} />\n      {category && (\n        <div>\n          <h3>Category {category}</h3>\n          <ChoreList\n            chores={chores}\n            category={category}\n            completeChore={completeChore}\n          />\n        </div>\n      )}\n      <MonsterHealth health={monsterHealth} />\n      <ChoreLegend chores={chores} />\n      <Button onClick={clearChores} className=\"mr-2\">Clear Chores</Button>\n      <Button onClick={resetMonsterHealth}>Reset Monster Health</Button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}